name: CITS3007 Project CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsodium-dev check valgrind
        
    - name: Verify libraries.txt
      run: |
        grep -q "libsodium" libraries.txt || echo "libsodium" >> libraries.txt
        grep -q "check" libraries.txt || echo "check" >> libraries.txt
        
    - name: Build project
      run: make all
      
    - name: Run tests with sanitizers
      run: |
        make test
        # Verify tests were built successfully
        find test -name "test_*" -type f -executable | grep -q "test_" || exit 1
        
    - name: Run Valgrind memory check
      run: |
        # Build Valgrind-specific binaries first
        make memcheck
        # Enhanced memory checking
        for test in test/test_*_valgrind; do
          if [ -x "$test" ]; then
            echo "Running Valgrind on $test"
            valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --error-exitcode=1 --track-fds=yes --trace-children=yes ./$test
          fi
        done

  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-tools
        
    - name: Run Cppcheck on implementation files
      run: |
        # Run strict checks on the implementation files you need to submit
        cppcheck --enable=all --suppress=missingIncludeSystem --suppress=unusedFunction --error-exitcode=1 \
          src/account.c src/login.c
        
    - name: Run Cppcheck on test files
      run: |
        # Check test files but with fewer restrictions
        cppcheck --enable=all --suppress=missingIncludeSystem \
           --error-exitcode=1 \
           -I src \
          test/

  fuzzing:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsodium-dev check valgrind clang llvm
        
    - name: Build fuzzing targets
      run: make fuzz
      
    - name: Run short fuzzing session
      run: |
        # Run each fuzzer for a short time in CI
        make run-fuzz FUZZ_TIME=30
        
    - name: Check for crashes
      run: |
        if find test/fuzz/output -name "crash-*" | grep -q .; then
          echo "CRASHES DETECTED during fuzzing!"
          find test/fuzz/output -name "crash-*" -exec ls -la {} \;
          exit 1
        else
          echo "No crashes detected during fuzzing."
        fi
        
    - name: Upload fuzzing results
      uses: actions/upload-artifact@v3
      with:
        name: fuzzing-results
        path: test/fuzz/output